/* Containers */
svg {
	font-family: sans-serif;
}
/* Fill the screen with the SVG. To alternatively use JavaScript:

	   Pablo(element).svg({width:'100%', height:'100%'});
*/
html, body, #mindmap, svg {
	width:100%;
	height:100%;
	margin: 0;
	padding: 0;
}


/* Text about the app */
.instructions {
	font-size: 30px;
}


/* Node */
.node rect, .node text {
	cursor: pointer;
}

.node text {
	fill: #000;

	/* Prevent text selection highlighting on dragging. And add browser vendor prefixes,
	   e.g. `-moz-user-select`. To alternatively use one line of JavaScript to apply 
	   vendor-prefixed styles to a collection of elements, using Pablo:

	       Pablo(element).cssPrefix('user-select', 'none');
	*/
	user-select: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
}
.node rect {
	fill: none;
	stroke: none;
}
.node path {
	fill: none;
	stroke: #e50000;
	stroke-width: 2;
	stroke-linecap: round;
}


/* Selected node:
   Style the <rect> element that is a direct child of the node container
   element - i.e. not <rect> elements belonging to child nodes
*/
.node.selected > rect {
	fill: #fff;
	stroke: #e50000;
	stroke-width: 1;
}


/* Different styles for the first node of the mindmap */
svg > .node > rect, 
svg > .node.selected > rect {
	fill: #333;
}
svg > .node > text {
	fill: #fff;
}
svg > .node.selected > text {
	fill: #e50000;
}